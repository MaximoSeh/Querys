

  DECLARE  
 @Id_Num_Orden INT  
  

SELECT @Id_Num_Orden = 559033710 
DECLARE    
   @ueType VARCHAR(20) = NULL;    
  
/*** INICIO Ordenes SETC y DST ***/  
-- Se crea tabla para almacenar las ordenes relacionadas.  
DECLARE  @Status_Ordenes  TABLE  
 ( Id_Num_Orden   INT,  
   Id_Num_Un    INT NULL,  
   Id_Num_OrdenStat  TINYINT NULL,  
   Desc_OrdenStat  CHAR(40) NULL,  
   Fec_Movto    DATETIME NULL,  
   Ind_Redondeo   TINYINT NULL,  
   Bit_UsaMovil   BIT NULL,  
   Bit_HaySurtidoTYC  BIT NULL,  
   Bit_EsPagoServExt     tinyint)  
  
declare  @Id_Num_Orden16    varchar(16),  
      @UeNo              varchar(25),  
   @Id_Num_Original   int = @Id_Num_Orden;  
  
set @Id_Num_Orden16 = RIGHT('0000000000000000' + CONVERT(VARCHAR,@Id_Num_Orden), 16);  
select top (1) @ueType = LTRIM(RTRIM(u.UeType)),  
    @UeNo = (SUBSTRING(u.UeNo,1,(CHARINDEX ( '-' , u.UeNo)) -1))  
  from OrderFacts_UE u   
  where u.OrderNo=@Id_Num_Orden;  
  
if @UeNo is null  
begin  
 set @UeNo = substring(@Id_Num_Orden16,5,10)  
 set @Id_Num_Orden = isnull((select top (1) t.OrderNo from OrderFacts_UE_Transition t where t.OrderNoPOS = convert(int, @UeNo) order by OrderNo), (convert(int,(@UeNo + '21'))))  
 set @ueType = ISNULL((SELECT LTRIM(RTRIM(UeType)) FROM OrderFacts_UE WHERE ORDERNO = @Id_Num_Orden),'')  
end  
  
INSERT INTO @Status_Ordenes (Id_Num_Orden)  
 SELECT u.OrderNo  
 FROM   OrderFacts_UE u (NOLOCK)  
 JOIN OrderFacts_UE_Transition o (NOLOCK)  
    ON u.OrderNo = o.OrderNo  
 WHERE  o.OrderNoPOS = convert(int, @UeNo)  
  AND (u.UeType = 'DST' or u.UeType = 'SETC')  
 GROUP BY u.OrderNo, u.UeType, u.StatusUe  
  
UPDATE stat  
SET  Bit_UsaMovil =   
   CASE  
    WHEN IsPickingManual = 0 THEN 1  
    ELSE 0  
   END  
 FROM OrderFacts_UE ue (NOLOCK)  
 JOIN @Status_Ordenes stat ON stat.Id_Num_Orden = ue.OrderNo  
 WHERE ue.OrderNo in (SELECT Id_Num_Orden FROM @Status_Ordenes)  
   
  
UPDATE @Status_Ordenes   
SET Bit_UsaMovil = 0 WHERE Bit_UsaMovil IS NULL  
  
UPDATE @Status_Ordenes   
SET Bit_EsPagoServExt = 0 WHERE Bit_EsPagoServExt IS NULL  
  
IF ( SELECT  COUNT(1)  
   FROM SOT_OrderFulfillment  
   WHERE Id_Num_Orden in (SELECT Id_Num_Orden FROM @Status_Ordenes) ) > 0  
 UPDATE stat  
 SET Bit_HaySurtidoTYC = 1  
 FROM SOT_OrderFulfillment sot  
 JOIN @Status_Ordenes stat ON sot.Id_Num_Orden = stat.Id_Num_Orden  
  
UPDATE @Status_Ordenes   
SET Bit_HaySurtidoTYC = 0 WHERE Bit_HaySurtidoTYC IS NULL  
  
INSERT INTO  dbo.OrderFacts_POS_WebS_Log  
SELECT   
  'Solicitud de status de Orden =' + CONVERT(VARCHAR,Id_Num_Orden),  
  dbo.fn_GetTimeZoneByStoreNumOrder(0, Id_Num_Orden)  
FROM @Status_Ordenes  
  
  
declare @OrderStatus int = (select OrderStatus from OrderFacts_POSOrderStatus where orderno = @Id_Num_Orden);  
declare @StatusDesc varchar(50) = (select OrderStatusDesc from OrderFacts_POSOrderStatus where orderno = @Id_Num_Orden);  
  
if exists (select * from tbl_liquidacion_pps where Numero_Orden = @Id_Num_Orden)  
 begin  
  set @OrderStatus = 4; --3;  
  set @StatusDesc = 'Orden despachada'--'Orden en despacho'  
 end  
  
UPDATE @Status_Ordenes  
SET   
    Id_Num_Un                         = StoreNum  
   ,Id_Num_OrdenStat                  = @OrderStatus  
   ,Desc_OrdenStat                    = @StatusDesc  
   ,Fec_Movto                         = OrderDateMov  
   ,Ind_Redondeo                      = OrderRounding  
 FROM OrderFacts_POSOrderStatus p ( NOLOCK )  
 JOIN @Status_Ordenes stat ON stat.Id_Num_Orden = p.OrderNo  
  
delete from @Status_Ordenes where Id_Num_OrdenStat=11;  
  
IF EXISTS ( SELECT 1 FROM @Status_Ordenes WHERE Bit_UsaMovil <> 0 )  
 IF EXISTS ( SELECT 1 FROM @Status_Ordenes WHERE Bit_HaySurtidoTYC = 0 )  
 BEGIN  
 UPDATE @Status_Ordenes  
  SET  Id_Num_OrdenStat = 2,  
    Desc_OrdenStat   = 'Falta finalizar surtido orden: ' + CONVERT(varchar, Id_Num_Orden)  
  WHERE Bit_UsaMovil <> 0 AND Bit_HaySurtidoTYC = 0  
 END  
   
 select * from @Status_Ordenes  
